{"version":3,"sources":["webpack:///src/app/user/signup/signup-form/signup-form.component.ts","webpack:///src/app/user/signup/signup-form/signup-form.component.html","webpack:///src/app/user/signup/signup-routing.module.ts","webpack:///src/app/user/signup/signup.component.ts","webpack:///src/app/user/signup/signup.component.html","webpack:///src/app/user/signup/signup.module.ts"],"names":["SignupFormComponent","createFormControls","createForm","firstname","required","lastname","email","pattern","password","minLength","cpassword","username","mobile","signupForm","console","log","value","formData","markAsTouched","selector","templateUrl","styleUrls","routes","path","component","SignupRoutingModule","forChild","imports","exports","SignupComponent","_authService","_router","_toastrMessageService","model","signupFormData","onSubmit","valid","data","body","signupUser","subscribe","response","typeSuccess","response_message","navigate","error","typeError","status_text","signup","providers","SignupModule","declarations"],"mappings":"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","file":"signup-signup-module-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\n\n@Component({\n    selector: 'signup-form',\n    templateUrl: './signup-form.component.html',\n    styleUrls: ['./signup-form.component.css']\n})\n\nexport class SignupFormComponent implements OnInit {\n\n    signupForm: FormGroup;\n    firstname: FormControl;\n    lastname: FormControl;\n    email: FormControl;\n    password: FormControl;\n    cpassword: FormControl;\n    username: FormControl;\n    mobile: FormControl;\n\n    ngOnInit() {\n        this.createFormControls();\n        this.createForm();\n    }\n\n    createFormControls() {\n        this.firstname = new FormControl('', [\n            Validators.required\n        ]);\n        this.lastname = new FormControl('', [\n            Validators.required\n        ]);\n        this.email = new FormControl('', [\n            Validators.required,\n            Validators.pattern(\"[^ @]*@[^ @]*\")\n        ]);\n        this.password = new FormControl('', [\n            Validators.required,\n            Validators.minLength(5)\n        ]);\n        this.cpassword = new FormControl('', [\n            Validators.required,\n            Validators.minLength(5)\n        ]);\n        this.username = new FormControl('', [\n            Validators.required\n        ]);\n        this.mobile = new FormControl('');\n    }\n\n    createForm() {\n        this.signupForm = new FormGroup({\n            firstname: this.firstname,\n            lastname: this.lastname,\n            email: this.email,\n            password: this.password,\n            cpassword: this.cpassword,\n            username: this.username,\n            mobile: this.mobile\n        });\n    }\n\n    onSubmit() {\n        console.log('you submitted value: ', this.signupForm.value);\n        const formData = this.signupForm[\"controls\"];\n        formData['firstname'].markAsTouched();\n        formData['lastname'].markAsTouched();\n        formData['username'].markAsTouched();\n        formData['email'].markAsTouched();\n        formData['password'].markAsTouched();\n        formData['cpassword'].markAsTouched();\n    }\n}\n","<form novalidate\n      [formGroup]=\"signupForm\">\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\"{\n        'has-danger': firstname.invalid && (firstname.dirty || firstname.touched),\n        'has-success': firstname.valid && (firstname.dirty || firstname.touched)}\">\n            <input type=\"text\"\n                   id=\"firstname\"\n                   class=\"fadeIn\"\n                   placeholder=\"firstname\"\n                   formControlName=\"firstname\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"firstname.errors && (firstname.dirty || firstname.touched)\">\n                <p *ngIf=\"firstname.errors.required\">firstname is required</p>\n                <p *ngIf=\"firstname.errors.pattern\">The username must contain at least the @ character</p>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\"{\n        'has-danger': lastname.invalid && (lastname.dirty || lastname.touched),\n        'has-success': lastname.valid && (lastname.dirty || lastname.touched)}\">\n            <input type=\"text\"\n                   id=\"lastname\"\n                   class=\"fadeIn\"\n                   placeholder=\"lastname\"\n                   formControlName=\"lastname\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"lastname.errors && (lastname.dirty || lastname.touched)\">\n                <p *ngIf=\"lastname.errors.required\">lastname is required</p>\n                <p *ngIf=\"lastname.errors.pattern\">The lastname must contain at least the @ character</p>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\"{\n        'has-danger': username.invalid && (username.dirty || username.touched),\n        'has-success': username.valid && (username.dirty || username.touched)}\">\n            <input type=\"text\"\n                   id=\"username\"\n                   class=\"fadeIn\"\n                   placeholder=\"username\"\n                   formControlName=\"username\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"username.errors && (username.dirty || username.touched)\">\n                <p *ngIf=\"username.errors.required\">Username is required</p>\n                <p *ngIf=\"username.errors.pattern\">The username address must contain at least the @ character</p>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\"{\n        'has-danger': email.invalid && (email.dirty || email.touched),\n        'has-success': email.valid && (email.dirty || email.touched)}\">\n            <input type=\"text\"\n                   id=\"login\"\n                   class=\"fadeIn\"\n                   placeholder=\"email\"\n                   formControlName=\"email\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"email.errors && (email.dirty || email.touched)\">\n                <p *ngIf=\"email.errors.required\">Email is required</p>\n                <p *ngIf=\"email.errors.pattern\">The email address must contain at least the @ character</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\" {\n        'has-danger': password.invalid && (password.dirty || password.touched),\n        'has-success': password.valid && (password.dirty || password.touched) }\">\n            <input type=\"password\"\n                   class=\"fadeIn\"\n                   name=\"password\"\n                   id=\"password\"\n                   placeholder=\"password\"\n                   formControlName=\"password\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"password.errors && (password.dirty || password.touched)\">\n                <p *ngIf=\"password.errors.required\">Password is required</p>\n                <p *ngIf=\"password.errors.minlength\">Password must be 5 characters long, we need another\n                    {{password.errors.minlength.requiredLength - password.errors.minlength.actualLength}}\n                    characters </p>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\" {\n        'has-danger': cpassword.invalid && (cpassword.dirty || cpassword.touched),\n        'has-success': cpassword.valid && (cpassword.dirty || cpassword.touched) }\">\n            <input type=\"password\"\n                   class=\"fadeIn\"\n                   name=\"cpassword\"\n                   id=\"cpassword\"\n                   placeholder=\"Confirm password\"\n                   formControlName=\"cpassword\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"cpassword.errors && (cpassword.dirty || cpassword.touched)\">\n                <p *ngIf=\"cpassword.errors.required\">Confirm Password is required</p>\n                <p *ngIf=\"cpassword.errors.minlength\">Confirm Password must be 5 characters long, we need another\n                    {{cpassword.errors.minlength.requiredLength - cpassword.errors.minlength.actualLength}}\n                    characters </p>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <input type=\"number\"\n                   class=\"fadeIn\"\n                   name=\"mobile\"\n                   id=\"mobile\"\n                   placeholder=\"mobile - (Optional)\"\n                   formControlName=\"mobile\"\n                   >\n        </div>\n        <div class=\"form-group col-md-6\">\n            <select id=\"sex\"\n                    class=\"fadeIn\">\n                <option selected>Choose you sex</option>\n                <option>male</option>\n                <option>female</option>\n            </select>\n        </div>\n    </div>\n</form>\n\n\n\n\n\n\n\n\n\n\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {SignupComponent} from './signup.component';\n\nconst routes: Routes = [\n    {path: '', component: SignupComponent}\n];\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SignupRoutingModule {\n}\n","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {AuthService} from '../../shared/auth/auth.service';\nimport {ToastrMessageService} from '../../shared/services/toastr-message.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SignupFormComponent} from './signup-form/signup-form.component';\nimport {Observable} from 'rxjs'\nimport {catchError, map, tap} from 'rxjs/operators';\n//import { Routes, RouterModule } from '@angular/router'; \n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.css'],\n    providers: [ToastrMessageService]\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n\n    @ViewChild(SignupFormComponent) signupFormData;\n    model: any;\n\n    constructor(private _authService: AuthService,\n                private _router: Router,\n                private _toastrMessageService: ToastrMessageService) {\n    }\n\n    ngAfterViewInit() {\n        this.model = this.signupFormData.signupForm;\n    }\n\n    onSubmit() {\n        this.signupFormData.onSubmit();\n    }\n\n    ngOnInit() {\n\n    }\n\n    signup(): void {\n        if (!this.model.valid) {\n            this.onSubmit();\n            console.log(\"Form is invalid!\");\n            return;\n        }\n        let data = this.model[\"controls\"];\n       \n        const body = {\n            firstname: data.firstname.value,\n            lastname: data.lastname.value,\n            username: data.username.value,\n            email: data.email.value,\n            password: data.password.value,\n            mobile: data.mobile.value || null\n        };\n        this._authService.signupUser(body)\n            .subscribe(\n                (data: { data: any, response: string, response_message: Array<any> }) => {\n                    if (data.response === 'success') {\n                        this._toastrMessageService.typeSuccess(data.response_message);\n                        this._router.navigate(['/user/login']);\n                    }\n                },\n                (error) => {\n                    this._toastrMessageService.typeError(error.error.response_message || error.status_text);\n                    this._router.navigate(['/user/signup']);\n                });\n\n    }\n}\n","<section class=\"testimonial py-5 fadeInDown\" id=\"testimonial\">\n    <div class=\"container \" id=\"signupContent\">\n        <div class=\"row \">\n            <div class=\"col-md-4 py-5 bg-primary text-white text-center \">\n                <div class=\"card-body\">\n                    <img src=\"http://www.ansonika.com/mavia/img/registration_bg.svg\" style=\"width:30%\">\n                    <h2 class=\"py-3\">Registration</h2>\n                    <p>Please fill all the mandatory fields </p>\n                </div>\n                <a class=\"underlineHover\" routerLink=\"/user/login\">Already have an account? Sign In</a>\n            </div>\n            <div class=\"col-md-8 py-5 border\">\n                <h4 class=\"pb-4\">Please fill with your details</h4>\n                <signup-form></signup-form>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <div class=\"form-check\">\n                            <input class=\"fadeIn\" type=\"checkbox\" value=\"\" id=\"invalidCheck2\"\n                                   required>\n                            <label class=\"form-check-label\" for=\"invalidCheck2\">\n                                <small>By clicking Submit, you agree to our Terms & Conditions, Visitor\n                                    Agreement and Privacy Policy.\n                                </small>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <input type=\"submit\" class=\"button\" value=\"Signup\" (click)=\"signup()\">\n                </div>\n                 <div class=\"form-row\">\n                    <button class=\"button\" routerLink=\"/login\">Login</button>\n                </div>\n                </div>\n        </div>\n    </div>\n</section>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {SignupRoutingModule} from './signup-routing.module';\nimport {SignupComponent} from './signup.component';\nimport {SignupFormComponent} from './signup-form/signup-form.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SignupRoutingModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [SignupComponent, SignupFormComponent]\n})\nexport class SignupModule {\n}\n"]}