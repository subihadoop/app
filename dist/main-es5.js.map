{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/components/add-report/add-report.component.ts","webpack:///src/app/pages/components/add-report/add-report.component.html","webpack:///src/app/pages/components/report-details/report-details.component.ts","webpack:///src/app/pages/components/report-details/report-details.component.html","webpack:///src/app/pages/components/report-list/report-list.component.ts","webpack:///src/app/pages/components/report-list/report-list.component.html","webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/pages.component.html","webpack:///src/app/pages/template/blank-template.component.ts","webpack:///src/app/pages/template/blank-template.component.html","webpack:///src/app/pages/template/left-nav-template.component.ts","webpack:///src/app/pages/template/left-nav-template.component.html","webpack:///src/app/shared/auth/auth-guard.service.ts","webpack:///src/app/shared/auth/auth.service.ts","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/shared/navigation/navigation.component.ts","webpack:///src/app/shared/navigation/navigation.component.html","webpack:///src/app/shared/services/http.service.ts","webpack:///src/app/shared/services/report.service.ts","webpack:///src/app/shared/services/token-interceptor.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","PagesModule","data","title","canActivate","UserModule","AppRoutingModule","forRoot","imports","AppComponent","titleService","router","activatedRoute","events","subscribe","event","getTitle","routerState","root","join","setTitle","state","parent","snapshot","push","firstChild","newTitle","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AddreportComponent","reportservice","report","description","published","submitted","create","response","console","log","error","reportDetailsComponent","route","currentreport","message","getreport","paramMap","get","status","update","delete","navigate","reportsListComponent","currentIndex","retrievereports","getAll","reports","index","deleteAll","refreshList","findByTitle","searchTitle","removeAllreports","PagesComponent","BlankTemplateComponent","LeftNavTemplateComponent","AuthGuardService","authService","isAuthenticated","AuthService","_http","_router","_httpService","body","post","username","password","pipe","localStorage","setItem","throw","isLoggedIn","getItem","removeItem","options","headers","set","getToken","token","userToken","payload","split","atob","JSON","parse","userInfo","getUserInfo","FooterComponent","HeaderComponent","_authService","userName","logout","NavigationComponent","HttpService","_spinner","serverBase","url","show","apiEndpoint","put","baseUrl","http","providedIn","TokenInterceptorService","request","next","updatedRequest","clone","handle","environment","production","inSecureApi","secureApi","endpoints","users","admin","pager","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,6CAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,QAAMC,MAAM,GAAW,CACnB;AACAC,UAAI,EAAE,OADN;AAEIC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,4CAA+BV,IAA/B,CAAoC,UAAAW,CAAC;AAAA,iBAAIA,CAAC,CAACC,WAAN;AAAA,SAArC,CAAN;AAAA,OAFlB;AAGIC,UAAI,EAAE;AACJC,aAAK,EAAE;AADH,OAHV;AAKMC,iBAAW,EAAC,CAAC,gFAAD;AALlB,KADmB,EAQf;AACAN,UAAI,EAAE,EADN;AAEAC,kBAAY,EAAG;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,0CAA6BV,IAA7B,CAAkC,UAAAW,CAAC;AAAA,iBAAIA,CAAC,CAACK,UAAN;AAAA,SAAnC,CAAN;AAAA;AAFf,KARe,CAAvB;;QAmBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHhB,CAAC,6DAAaC,OAAb,CAAqBV,MAArB,CAAD,CAGgB,EAFf,4DAEe;;;;0HAAhBS,gB,EAAgB;AAAA;AAAA,kBAFf,4DAEe;AAAA,O;AAFH,K;;;;;sEAEbA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACNE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBV,MAArB,CAAD,CADH;AAENF,iBAAO,EAAE,CAAC,4DAAD;AAFH,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACtB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcac,Y;;;AAGX,4BAAoBC,YAApB,EAAyCC,MAAzC,EAAyDC,cAAzD,EAAyF;AAAA;;AAAA;;AAArE,aAAAF,YAAA,GAAAA,YAAA;AAFpB,aAAAP,KAAA,GAAQ,YAAR;AAGEQ,cAAM,CAACE,MAAP,CAAcC,SAAd,CAAwB,UAAAC,KAAK,EAAI;AAC/B,cAAIA,KAAK,YAAY,6DAArB,EAAoC;AAClC,gBAAMZ,KAAK,GAAG,KAAI,CAACa,QAAL,CAAcL,MAAM,CAACM,WAArB,EAAkCN,MAAM,CAACM,WAAP,CAAmBC,IAArD,EAA2DC,IAA3D,CAAgE,KAAhE,CAAd;;AACAT,wBAAY,CAACU,QAAb,CAAsBjB,KAAtB;AACD;AACF,SALD;AAMD;;;;iCAEQkB,K,EAAOC,M,EAAQ;AACtB,cAAMpB,IAAI,GAAG,EAAb;;AACA,cAAIoB,MAAM,IAAIA,MAAM,CAACC,QAAP,CAAgBrB,IAA1B,IAAkCoB,MAAM,CAACC,QAAP,CAAgBrB,IAAhB,CAAqBC,KAA3D,EAAkE;AAChED,gBAAI,CAACsB,IAAL,CAAUF,MAAM,CAACC,QAAP,CAAgBrB,IAAhB,CAAqBC,KAA/B;AACD;;AAED,cAAIkB,KAAK,IAAIC,MAAb,EAAqB;AACnBpB,gBAAI,CAACsB,IAAL,OAAAtB,IAAI,qBAAU,KAAKc,QAAL,CAAcK,KAAd,EAAqBA,KAAK,CAACI,UAAN,CAAiBH,MAAjB,CAArB,CAAV,EAAJ;AACD;;AACD,iBAAOpB,IAAP;AACD;;;iCAEewB,Q,EAAkB;AAChC,eAAKhB,YAAL,CAAkBU,QAAlB,CAA2BM,QAA3B;AACD;;;;;;;uBA1BUjB,Y,EAAY,gI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACdzB;;;;;;;;;sEDcaA,Y,EAAY;cAPxB,uDAOwB;eAPd;AACTkB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAOc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEdzmEaC,S;;;;;YAAAA,S;AAAS,kBAFN,2DAEM;;;;yBAATA,S;AAAS,O;AAAA,iBAfP,CACP,0EADO,EAEP,sEAFO,EAGP,iFAHO,EAIP;AACIC,eAAO,EAAE,gEADb;AAEIC,gBAAQ,EAAE;AAFd,OAJO,EAQP;AACID,eAAO,EAAE,sEADb;AAEIC,gBAAQ,EAAE,mGAFd;AAGIC,aAAK,EAAE;AAHX,OARO,C;AAYL,gBAxBG,CACL,uEADK,EAEL,4FAFK,EAGL,wDAAa1B,OAAb,EAHK,EAIL,0DAJK,EAKL,oEALK,EAML,wDANK,EAOL,qEAPK,CAQL;AACD;AATM,OAwBH;;;;0HAGGuB,S,EAAS;AAAA,uBArCd,sEAqCc,EApCd,qGAoCc,EAnCd,gFAmCc,EAlCd,gFAkCc,EAjCd,gGAiCc,EAhCd,4FAgCc,EA/Bd,wGA+Bc,EA9Bd,oHA8Bc,EA7Bf,4GA6Be;AA7BK,kBAGnB,uEAHmB,EAInB,4FAJmB,EAIM,uDAJN,EAKK;AACxB,kEANmB,EAOnB,oEAPmB,EAQnB,wDARmB,EASnB,qEATmB,CAUnB;AACD;AAXoB;AA6BL,O;;;;;;sEAATA,S,EAAS;cAvCrB,sDAuCqB;eAvCZ;AACNI,sBAAY,EAAE,CACV,sEADU,EAEV,qGAFU,EAGV,gFAHU,EAIV,gFAJU,EAKV,gGALU,EAMV,4FANU,EAOV,wGAPU,EAQV,oHARU,EASX,4GATW,CADR;AAYN1B,iBAAO,EAAE,CACL,uEADK,EAEL,4FAFK,EAGL,wDAAaD,OAAb,EAHK,EAIL,0DAJK,EAKL,oEALK,EAML,wDANK,EAOL,qEAPK,CAQL;AACD;AATM,WAZH;AAwBN4B,mBAAS,EAAE,CACP,0EADO,EAEP,sEAFO,EAGP,iFAHO,EAIP;AACIJ,mBAAO,EAAE,gEADb;AAEIC,oBAAQ,EAAE;AAFd,WAJO,EAQP;AACID,mBAAO,EAAE,sEADb;AAEIC,oBAAQ,EAAE,mGAFd;AAGIC,iBAAK,EAAE;AAHX,WARO,CAxBL;AAqCNG,mBAAS,EAAE,CAAC,2DAAD;AArCL,S;AAuCY,Q;;;;;;;;;;;;;;;;;;ACnEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCE;;AACE;;AACE;;AAAmB;;AAAK;;AACxB;;AAKE;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AAQF;;AAEA;;AACE;;AAAyB;;AAAW;;AACpC;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAOF;;AAEA;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;AAAM;;AAC/D;;;;;;AAjBM;;AAAA;;AAWA;;AAAA;;;;;;;;AAQN;;AACE;;AAAI;;AAA2B;;AAC/B;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAG;;AAC3D;;;;QDxBWC,kB;;;AAQX,kCAAoBC,aAApB,EAAmD;AAAA;;AAA/B,aAAAA,aAAA,GAAAA,aAAA;AAPpB,aAAAC,MAAA,GAAS;AACPpC,eAAK,EAAE,EADA;AAEPqC,qBAAW,EAAE,EAFN;AAGPC,mBAAS,EAAE;AAHJ,SAAT;AAKA,aAAAC,SAAA,GAAY,KAAZ;AAEsD;;;;mCAE3C,CACV;;;qCAEY;AAAA;;AACX,cAAMxC,IAAI,GAAG;AACXC,iBAAK,EAAE,KAAKoC,MAAL,CAAYpC,KADR;AAEXqC,uBAAW,EAAE,KAAKD,MAAL,CAAYC;AAFd,WAAb;AAKA,eAAKF,aAAL,CAAmBK,MAAnB,CAA0BzC,IAA1B,EACGY,SADH,CAEI,UAAA8B,QAAQ,EAAI;AACVC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,kBAAI,CAACF,SAAL,GAAiB,IAAjB;AACD,WALL,EAMI,UAAAK,KAAK,EAAI;AACPF,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WARL;AASD;;;oCAEW;AACV,eAAKL,SAAL,GAAiB,KAAjB;AACA,eAAKH,MAAL,GAAc;AACZpC,iBAAK,EAAE,EADK;AAEZqC,uBAAW,EAAE,EAFD;AAGZC,qBAAS,EAAE;AAHC,WAAd;AAKD;;;;;;;uBArCUJ,kB,EAAkB,8I;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,c;AAAA,a;AAAA,uX;AAAA;AAAA;ACP/B;;AACE;;AA2BA;;AAIF;;;;AA/BO;;AAAA;;AA2BA;;AAAA;;;;;;;;;sEDrBMA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTV,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC8BE;;AAGE;AAAA;;AAAA;;AAAA,yCAAyB,KAAzB;AAA8B,SAA9B;;AAEA;;AACF;;;;;;;;AACA;;AAGE;AAAA;;AAAA;;AAAA,yCAAyB,IAAzB;AAA6B,SAA7B;;AAEA;;AACF;;;;;;;;AA3CF;;AACE;;AAAI;;AAAM;;AACV;;AACE;;AACE;;AAAmB;;AAAK;;AACxB;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAOF;;AACA;;AACE;;AAAyB;;AAAW;;AACpC;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAOF;;AAEA;;AACE;;AAAO;;AAAQ;;AAAO;;AAAS;;AAC/B;;AACF;;AACF;;AAEA;;AAOA;;AAQA;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AACF;;AAEA;;AAAkD;AAAA;;AAAA;;AAAA;AAAA;;AAChD;;AACF;;AACA;;AAAG;;AAAa;;AAClB;;;;;;AA5CQ;;AAAA;;AAUA;;AAAA;;AAOF;;AAAA;;AAMF;;AAAA;;AAMA;;AAAA;;AAcC;;AAAA;;;;;;AAGL;;AACE;;AACA;;AAAG;;AAA4B;;AACjC;;;;QDjDamB,sB;;;AAIX,sCACUV,aADV,EAEUW,KAFV,EAGUtC,MAHV,EAG0B;AAAA;;AAFhB,aAAA2B,aAAA,GAAAA,aAAA;AACA,aAAAW,KAAA,GAAAA,KAAA;AACA,aAAAtC,MAAA,GAAAA,MAAA;AANV,aAAAuC,aAAA,GAAgB,IAAhB;AACA,aAAAC,OAAA,GAAU,EAAV;AAK6B;;;;mCAElB;AACT,eAAKA,OAAL,GAAe,EAAf;AACA,eAAKC,SAAL,CAAe,KAAKH,KAAL,CAAW1B,QAAX,CAAoB8B,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAf;AACD;;;kCAES1D,E,EAAI;AAAA;;AACZ,eAAK0C,aAAL,CAAmBgB,GAAnB,CAAuB1D,EAAvB,EACGkB,SADH,CAEI,UAAAZ,IAAI,EAAI;AACN,kBAAI,CAACgD,aAAL,GAAqBhD,IAArB;AACA2C,mBAAO,CAACC,GAAR,CAAY5C,IAAZ;AACD,WALL,EAMI,UAAA6C,KAAK,EAAI;AACPF,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WARL;AASD;;;wCAEeQ,M,EAAQ;AAAA;;AACtB,cAAMrD,IAAI,GAAG;AACXC,iBAAK,EAAE,KAAK+C,aAAL,CAAmB/C,KADf;AAEXqC,uBAAW,EAAE,KAAKU,aAAL,CAAmBV,WAFrB;AAGXC,qBAAS,EAAEc;AAHA,WAAb;AAMA,eAAKjB,aAAL,CAAmBkB,MAAnB,CAA0B,KAAKN,aAAL,CAAmBtD,EAA7C,EAAiDM,IAAjD,EACGY,SADH,CAEI,UAAA8B,QAAQ,EAAI;AACV,kBAAI,CAACM,aAAL,CAAmBT,SAAnB,GAA+Bc,MAA/B;AACAV,mBAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,WALL,EAMI,UAAAG,KAAK,EAAI;AACPF,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WARL;AASD;;;uCAEc;AAAA;;AACb,eAAKT,aAAL,CAAmBkB,MAAnB,CAA0B,KAAKN,aAAL,CAAmBtD,EAA7C,EAAiD,KAAKsD,aAAtD,EACGpC,SADH,CAEI,UAAA8B,QAAQ,EAAI;AACVC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,kBAAI,CAACO,OAAL,GAAe,sCAAf;AACD,WALL,EAMI,UAAAJ,KAAK,EAAI;AACPF,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WARL;AASD;;;uCAEc;AAAA;;AACb,eAAKT,aAAL,CAAmBmB,MAAnB,CAA0B,KAAKP,aAAL,CAAmBtD,EAA7C,EACGkB,SADH,CAEI,UAAA8B,QAAQ,EAAI;AACVC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,kBAAI,CAACjC,MAAL,CAAY+C,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACD,WALL,EAMI,UAAAX,KAAK,EAAI;AACPF,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WARL;AASD;;;;;;;uBAlEUC,sB,EAAsB,8I,EAAA,+H,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA,ikB;AAAA;AAAA;ACTnC;;AAuDA;;;;AAvDK;;AAuDA;;AAAA;;;;;;;;;sED9CQA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTrB,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AETnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACuBM;;AAIE;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;;;;AAJE;;AAGA;;AAAA;;;;;;AASJ;;AACE;;AAAI;;AAAM;;AACV;;AACE;;AAAO;;AAAQ;;AAAM;;AAAS;;AAAS;;AACzC;;AACA;;AACE;;AAAO;;AAAQ;;AAAY;;AAAS;;AACpC;;AACF;;AACA;;AACE;;AAAO;;AAAQ;;AAAO;;AAAS;;AAC/B;;AACF;;AAEA;;AACE;;AACF;;AACF;;;;;;AAd2C;;AAAA;;AAIvC;;AAAA;;AAIA;;AAAA;;AAG6B;;AAAA;;;;;;AAKjC;;AACE;;AACA;;AAAG;;AAA2B;;AAChC;;;;QDpDS8B,oB;;;AAOX,oCAAoBrB,aAApB,EAAkD;AAAA;;AAA9B,aAAAA,aAAA,GAAAA,aAAA;AAJpB,aAAAY,aAAA,GAAgB,IAAhB;AACA,aAAAU,YAAA,GAAe,CAAC,CAAhB;AACA,aAAAzD,KAAA,GAAQ,EAAR;AAEqD;;;;mCAE1C;AACT,eAAK0D,eAAL;AACD;;;0CAEiB;AAAA;;AAChB,eAAKvB,aAAL,CAAmBwB,MAAnB,GACGhD,SADH,CAEI,UAAAZ,IAAI,EAAI;AACN,kBAAI,CAAC6D,OAAL,GAAe7D,IAAf;AACA2C,mBAAO,CAACC,GAAR,CAAY5C,IAAZ;AACD,WALL,EAMI,UAAA6C,KAAK,EAAI;AACPF,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WARL;AASD;;;sCAEa;AACZ,eAAKc,eAAL;AACA,eAAKX,aAAL,GAAqB,IAArB;AACA,eAAKU,YAAL,GAAoB,CAAC,CAArB;AACD;;;wCAEerB,M,EAAQyB,K,EAAO;AAC7B,eAAKd,aAAL,GAAqBX,MAArB;AACA,eAAKqB,YAAL,GAAoBI,KAApB;AACD;;;2CAEkB;AAAA;;AACjB,eAAK1B,aAAL,CAAmB2B,SAAnB,GACGnD,SADH,CAEI,UAAA8B,QAAQ,EAAI;AACVC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,kBAAI,CAACsB,WAAL;AACD,WALL,EAMI,UAAAnB,KAAK,EAAI;AACPF,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WARL;AASD;;;sCAEa;AAAA;;AACZ,eAAKT,aAAL,CAAmB6B,WAAnB,CAA+B,KAAKhE,KAApC,EACGW,SADH,CAEI,UAAAZ,IAAI,EAAI;AACN,kBAAI,CAAC6D,OAAL,GAAe7D,IAAf;AACA2C,mBAAO,CAACC,GAAR,CAAY5C,IAAZ;AACD,WALL,EAMI,UAAA6C,KAAK,EAAI;AACPF,mBAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,WARL;AASD;;;;;;;uBA1DUY,oB,EAAoB,8I;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,0hB;AAAA;AAAA;ACRjC;;AACE;;AACE;;AACE;;AAIE;AAAA;AAAA;;AAJF;;AAMA;;AACE;;AAGE;AAAA,mBAAS,IAAAS,WAAA,EAAT;AAAsB,WAAtB;;AAEA;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAY;;AAChB;;AACE;;AAQF;;AAEA;;AAA0C;AAAA,mBAAS,IAAAC,gBAAA,EAAT;AAA2B,WAA3B;;AACxC;;AACF;;AACF;;AACA;;AACE;;AAmBA;;AAIF;;AACF;;;;AAvDQ;;AAAA;;AAkBA;;AAAA;;AAaC;;AAAA;;AAmBA;;AAAA;;;;;;;;;sEDjDIV,oB,EAAoB;cALhC,uDAKgC;eALtB;AACThC,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;AERjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayC,c;;;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA;AAAA;ACP3B;;AACA;;AACA;;;;;;;;;sEDKaA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT3C,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa0C,sB;;;AAEX,wCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA;AAAA;ACNnC;;AACA;;;;;;;;;sEDKaA,sB,EAAsB;cAJlC,uDAIkC;eAJxB;AACT5C,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE;AAFJ,S;AAIwB,Q;;;;;;;;;;;;;;;;;;;;AENnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa4C,wB;;;AAEX,0CAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,wB;AAAwB,K;;;YAAxBA,wB;AAAwB,4C;AAAA,c;AAAA,a;AAAA;AAAA;ACNrC;;AACA;;AACA;;;;;;;;;sEDIaA,wB,EAAwB;cAJpC,uDAIoC;eAJ1B;AACT7C,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE;AAFJ,S;AAI0B,Q;;;;;;;;;;;;;;;;;;;;AELrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGa6C,gB;;;AAET,gCAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AACnB;;;;oCAEWzB,K,EAA+B5B,K,EAA4B;AACnE,iBAAO,KAAKqD,WAAL,CAAiBC,eAAjB,EAAP;AACH;;;;;;;uBAPQF,gB,EAAgB,iH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;ACJ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,iD,CAQA;;;QAGaG,W;;;AAGT,2BAAoBC,KAApB,EACoBC,OADpB,EAEoBC,YAFpB,EAE+C;AAAA;;AAF3B,aAAAF,KAAA,GAAAA,KAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACnB;;;;mCAGUC,I,EAAS;AAChB,iBAAO,KAAKD,YAAL,CAAkBE,IAAlB,CAAuB,SAAvB,EAAkCD,IAAlC,CAAP;AACH;;;mCAIUE,Q,EAAkBC,Q,EAAgB;AAEzC,cAAMH,IAAI,GAAG;AACT,wBAAYE,QADH;AAET,wBAAYC;AAFH,WAAb;AAIA,iBAAO,KAAKJ,YAAL,CAAkBE,IAAlB,CAAuB,QAAvB,EAAiCD,IAAjC,EACFI,IADE,CAEC,2DACI,UAAClF,IAAD,EAAyE;AACrE,gBAAIA,IAAI,CAAC0C,QAAL,KAAkB,SAAtB,EAAiC;AAC7B,kBAAI1C,IAAI,IAAIA,IAAI,CAACA,IAAjB,EAAuB;AACnBmF,4BAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BpF,IAAI,CAACA,IAAnC;AACH;;AACD,qBAAOA,IAAP;AACH;AACJ,WARL,CAFD,EAWC,kEAAW,UAAA6C,KAAK;AAAA,mBAAI,gDAAWwC,KAAX,CAAiBxC,KAAK,IAAI,uBAA1B,CAAJ;AAAA,WAAhB,CAXD,CAAP;AAaH;;;qCAES;AACN,cAAMyC,UAAU,GAAGH,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAnB;AACA,iBAAQD,UAAU,GAAG,IAAH,GAAU,KAA5B;AACH;;;iCAEK;AACF,cAAI,KAAKA,UAAL,EAAJ,EAAuB;AACnBH,wBAAY,CAACK,UAAb,CAAwB,OAAxB;AACA,gBAAMC,OAAO,GAAG;AACZC,qBAAO,EAAE,IAAI,gEAAJ,GACJC,GADI,CACA,eADA,EACiB,YAAY,KAAKC,QAAL,EAD7B,EAEJD,GAFI,CAEA,cAFA,EAEgB,kBAFhB;AADG,aAAhB,CAFmB,CAOnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACDR,sBAAY,CAACK,UAAb,CAAwB,OAAxB;AACA,eAAKK,KAAL,GAAa,IAAb;AACH;;;sCAEa;AAEV,cAAMC,SAAS,GAAG,KAAKF,QAAL,EAAlB;;AACA,cAAIE,SAAJ,EAAe;AACX,gBAAIC,OAAO,GAAGD,SAAS,CAACE,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAd;AACAD,mBAAO,GAAGE,IAAI,CAACF,OAAD,CAAd;AACAA,mBAAO,GAAGG,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAV;AACA,mBAAOA,OAAP;AACH;;AACD,iBAAO,IAAP;AACH;;;kCAEM;AACH,cAAMK,QAAQ,GAAG,KAAKC,WAAL,EAAjB;;AACA,cAAID,QAAJ,EAAc;AACV,mBAAOA,QAAQ,CAAC,MAAD,CAAR,IAAoB,EAA3B;AACH,WAFD,MAEO;AACH,mBAAO,IAAP;AACH;AACJ;;;mCAGO;AACJ,iBAAOjB,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAP;AACH;;;kCACS;AAEN,cAAMO,SAAS,GAAG,KAAKF,QAAL,EAAlB;;AACA,cAAIE,SAAJ,EAAe;AACX,gBAAIC,OAAO,GAAGD,SAAS,CAACE,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAd;AACAD,mBAAO,GAAGE,IAAI,CAACF,OAAD,CAAd;AACAA,mBAAO,GAAGG,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAV;AACA,mBAAOA,OAAP;AACH;;AACD,iBAAO,IAAP;AACH;;;0CAGiB;AACd,cAAIZ,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/B,mBAAO,IAAP;AACH;;AACD,eAAKX,OAAL,CAAapB,QAAb,CAAsB,CAAC,aAAD,CAAtB;;AACA,iBAAO,KAAP;AACH;;;sCAEaX,K,EAAiB;AAC3BF,iBAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,iBAAO,gDAAWwC,KAAX,CAAiBxC,KAAK,IAAI,uBAA1B,CAAP;AACH;;;;;;;uBA/GQ6B,W,EAAW,uH,EAAA,8G,EAAA,iI;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa4B,e;;;AAEX,iCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,sM;AAAA;AAAA;ACP5B;;AACI;;AACI;;AAAU;;AAA4B;;AAAG;;AAA8C;;AAAW;;AACtG;;AACJ;;;;;;;;sEDGaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT7E,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa4E,e;;;AAEX,+BAAoBC,YAApB,EACoB5B,OADpB,EACqC;AAAA;;AADjB,aAAA4B,YAAA,GAAAA,YAAA;AACA,aAAA5B,OAAA,GAAAA,OAAA;AACnB;;;;mCAEU;AACP,eAAK6B,QAAL;AACH;;;mCAEO;AACJ,cAAMA,QAAQ,GAAG,KAAKD,YAAL,CAAkBH,WAAlB,EAAjB;;AACA,iBAAOI,QAAQ,CAAC,YAAD,CAAf;AACH;;;iCAEQ;AACL,eAAKD,YAAL,CAAkBE,MAAlB;;AACA,eAAK9B,OAAL,CAAapB,QAAb,CAAsB,CAAC,aAAD,CAAtB;AACH;;;;;;;uBAlBU+C,e,EAAe,+H,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,k7B;AAAA;AAAA;ACT5B;;AACI;;AAA2C;;AAAqB;;AAChE;;AACI;;AACI;;AAA6D;;AAAuB;;AACpF;;AAAwD;;AAAO;;AAC/D;;AAAuD;;AAAK;;AAC5D;;AAAyD;;AAAO;;AACpE;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAqB;;AAA2D;;AAC5E;;AAAqB;;AACrB;;AACI;;AAAI;;AAAwB;;AAA8B;;AAAe;;AAAI;;AAC7E;;AACA;;AAAI;;AAAG;AAAA,mBAAS,IAAAG,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAyB;;AAAM;;AAAI;;AACjE;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAV4F;;AAAA;;;;;;;;;sEDb/EH,e,EAAe;cAL3B,uDAK2B;eALjB;AACT9E,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;QAOagF,mB;;;AAEX,qCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,c;AAAA,gpB;AAAA;AAAA;ACPhC;;AACI;;AACI;;AAEI;;AACI;;AAAiE;;AACrE;;AAA+C;;AAA6B;;AAC5E;;AAAO;;AAEX;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAM;;AAAK;;AACX;;AAA2B;;AAAgB;;AAC/C;;AACJ;;AACA;;AAAI;;AAAqF;;AAA2B;;AAC1F;;AAAS;;AAAO;;AAAI;;AAK9C;;AACI;;AACI;;AACA;;AAAwB;;AAAW;;AACvC;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAwB;;AAAI;;AAChC;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAwB;;AAAM;;AAClC;;AACJ;;AACJ;;AACJ;;;;AAzBe;;AAAA,wJAA4B,kBAA5B,EAA4B,qEAA5B;;AAOA;;AAAA,yJAA8B,kBAA9B,EAA8B,sEAA9B;;AAMC;;AAAA,yJAAwB,kBAAxB,EAAwB,sEAAxB;;AAMA;;AAAA,yJAAyB,kBAAzB,EAAyB,sEAAzB;;;;;;;;;sED/BHA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTlF,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaiF,W;;;AAGT,2BAAoBjC,KAApB,EACoBkC,QADpB,EACiD;AAAA;;AAD7B,aAAAlC,KAAA,GAAAA,KAAA;AACA,aAAAkC,QAAA,GAAAA,QAAA;AAChB,aAAKC,UAAL,GAAkB,sEAAYA,UAA9B;AACH;;;;4BAEGC,G,EAAG;AACH,eAAKF,QAAL,CAAcG,IAAd;;AACA,iBAAO,KAAKrC,KAAL,CAAWvB,GAAX,CAAe,KAAK0D,UAAL,GAAkBC,GAAjC,EAAsC,EAAtC,CAAP;AACH;;;6BAEIA,G,EAAa/G,I,EAAS;AACvB,eAAK6G,QAAL,CAAcG,IAAd;;AAEA,cAAMC,WAAW,aAAM,KAAKH,UAAX,SAAwBC,GAAxB,CAAjB;AACApE,iBAAO,CAACC,GAAR,8BAAkCqE,WAAlC;AACA,iBAAO,KAAKtC,KAAL,CAAWI,IAAX,CAAgBkC,WAAhB,EAA6BjH,IAA7B,EAAmC,EAAnC,CAAP;AACH;;;4BAEG+G,G,EAAa/G,I,EAAS;AACtB,eAAK6G,QAAL,CAAcG,IAAd;;AACD,cAAMC,WAAW,aAAM,KAAKH,UAAX,SAAwBC,GAAxB,CAAjB;AACCpE,iBAAO,CAACC,GAAR,8BAAkCqE,WAAlC;AAEA,iBAAO,KAAKtC,KAAL,CAAWuC,GAAX,CAAeD,WAAf,EAA4BjH,IAA5B,EAAkC,EAAlC,CAAP;AACH;;;gCAEM+G,G,EAAarH,E,EAAO;AACvB,eAAKmH,QAAL,CAAcG,IAAd,GADuB,CAEvB;AACA;AACA;AACA;;;AACD,cAAMC,WAAW,aAAM,KAAKH,UAAX,SAAwBC,GAAxB,CAAjB;AACCpE,iBAAO,CAACC,GAAR,8BAAkCqE,WAAlC;AACA,cAAIxB,OAAO,GAAG,CACV;AADU,WAAd;AAGA,iBAAO,KAAKd,KAAL,CAAWpB,MAAX,CAAkB0D,WAAW,GAAG,GAAd,GAAoBvH,EAAtC,EAA0C+F,OAA1C,CAAP;AACH;;;;;;;uBAzCQmB,W,EAAW,uH,EAAA,qH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,QAAMO,OAAO,GAAG,mCAAhB;;QAKa/E,a;;;AAEX,6BAAoBgF,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;iCAEhC;AACP,iBAAO,KAAKA,IAAL,CAAUhE,GAAV,CAAc+D,OAAd,CAAP;AACD;;;4BAEGzH,E,EAAI;AACN,iBAAO,KAAK0H,IAAL,CAAUhE,GAAV,WAAiB+D,OAAjB,cAA4BzH,EAA5B,EAAP;AACD;;;+BAEMM,I,EAAM;AACX,iBAAO,KAAKoH,IAAL,CAAUrC,IAAV,CAAeoC,OAAf,EAAwBnH,IAAxB,CAAP;AACD;;;+BAEMN,E,EAAIM,I,EAAM;AACf,iBAAO,KAAKoH,IAAL,CAAUF,GAAV,WAAiBC,OAAjB,cAA4BzH,EAA5B,GAAkCM,IAAlC,CAAP;AACD;;;gCAEMN,E,EAAI;AACT,iBAAO,KAAK0H,IAAL,CAAU7D,MAAV,WAAoB4D,OAApB,cAA+BzH,EAA/B,EAAP;AACD;;;oCAEW;AACV,iBAAO,KAAK0H,IAAL,CAAU7D,MAAV,CAAiB4D,OAAjB,CAAP;AACD;;;oCAEWlH,K,EAAO;AACjB,iBAAO,KAAKmH,IAAL,CAAUhE,GAAV,WAAiB+D,OAAjB,oBAAkClH,KAAlC,EAAP;AACD;;;;;;;uBA9BUmC,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACViF,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACR1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oE,CAAA;;;QAgBaC,uB;;;AACT,yCAAc;AAAA;AACb,O,CAED;;;;;kCACUC,O,EAA2BC,I,EAAiB;AAClD;AACA,cAAM3B,KAAK,GAAGV,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAd;AACA,cAAMkC,cAAc,GAAGF,OAAO,CAACG,KAAR,CAAc;AACjChC,mBAAO,EAAE6B,OAAO,CAAC7B,OAAR,CACJC,GADI,CACA,eADA,EACiB,YAAYE,KAD7B,EAEJF,GAFI,CAEA,cAFA,EAEgB,kBAFhB;AADwB,WAAd,CAAvB,CAHkD,CASlD;;AACAhD,iBAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC6E,cAAzC;AACA,iBAAOD,IAAI,CAACG,MAAL,CAAYJ,OAAZ,EAAqBrC,IAArB,CACH,2DACI,UAAArE,KAAK,EAAI;AACL;AACA,gBAAIA,KAAK,YAAY,iEAArB,EAAmC;AAC/B8B,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC/B,KAAlC;AACH;AACJ,WANL,EAOI,UAAAgC,KAAK,EAAI;AACL;AACA,gBAAIhC,KAAK,YAAY,iEAArB,EAAmC;AAC/B8B,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC/B,KAAhC;AACH;AACJ,WAZL,CADG,CAAP;AAgBH;;;;;;;uBAhCQyG,uB;AAAuB,K;;;aAAvBA,uB;AAAuB,eAAvBA,uBAAuB,K;AAAA,kBAFpB;;;;;sEAEHA,uB,EAAuB;cAHnC,wDAGmC;eAHxB;AACRD,oBAAU,EAAE;AADJ,S;AAGwB,Q;;;;;;;;;;;;;;;;;;;;AChBpC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;AACA;;;AAEO,QAAMO,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBf,gBAAU,EAAE,uBAFa;AAGzBgB,iBAAW,EAAE,MAHY;AAIzBC,eAAS,EAAE,OAJc;AAKzBC,eAAS,EAAE;AACPC,aAAK,EAAE,cADA;AAEPC,aAAK,EAAE,QAFA;AAGPC,aAAK,EAAE;AAHA;AALc,KAApB;;;;;;;;;;;;;;;;ACLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYN,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBO,eAAzB,CAAyC,yDAAzC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {AuthGuardService} from './shared/auth/auth-guard.service';\nconst routes: Routes = [\n    {\n    path: 'pages',\n        loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule),\n        data: {\n          title: 'Main page'\n        },canActivate:[AuthGuardService]\n    },\n        {\n        path: '',\n        loadChildren:  () => import('./user/user.module').then(m => m.UserModule),\n    },\n   \n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\nimport {Title} from '@angular/platform-browser';\nimport {Router, ActivatedRoute, NavigationEnd, Event} from '@angular/router';\n\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n\nexport class AppComponent {\n  title = 'app works!';\n\n  constructor(private titleService: Title, router: Router, activatedRoute: ActivatedRoute) {\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const title = this.getTitle(router.routerState, router.routerState.root).join(' | ');\n        titleService.setTitle(title);\n      }\n    });\n  }\n\n  getTitle(state, parent) {\n    const data = [];\n    if (parent && parent.snapshot.data && parent.snapshot.data.title) {\n      data.push(parent.snapshot.data.title);\n    }\n\n    if (state && parent) {\n      data.push(... this.getTitle(state, state.firstChild(parent)));\n    }\n    return data;\n  }\n\n  public setTitle(newTitle: string) {\n    this.titleService.setTitle(newTitle);\n  }\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {HttpModule} from '@angular/http';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpService} from './shared/services/http.service';\nimport {AuthService} from './shared/auth/auth.service';\nimport {AuthGuardService} from './shared/auth/auth-guard.service';\nimport {TokenInterceptorService} from './shared/services/token-interceptor.service';\nimport { UserModule } from './user/user.module';\nimport { PagesComponent } from './pages/pages.component';\nimport { BarChartComponent } from './shared/bar-chart/bar-chart.component';\nimport { LineChartComponent } from './shared/line-chart/line-chart.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { LeftNavTemplateComponent } from './pages/template/left-nav-template.component';\nimport { BlankTemplateComponent } from './pages/template/blank-template.component';\nimport { NavigationComponent } from './shared/navigation/navigation.component';\nimport { AddreportComponent } from 'app/pages/components/add-report/add-report.component';\nimport { reportDetailsComponent } from 'app/pages/components/report-details/report-details.component';\nimport { reportsListComponent } from 'app/pages/components/report-list/report-list.component';\n\n\n@NgModule({\n    declarations: [\n        PagesComponent,\n        LeftNavTemplateComponent,\n        HeaderComponent,\n        FooterComponent,\n        BlankTemplateComponent,\n        NavigationComponent,\n        AddreportComponent,\n        reportDetailsComponent, \n       reportsListComponent \n       ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule, // ToastrModule required animations module\n        ToastrModule.forRoot(), // ToastrModule added\n        FormsModule,\n        AppRoutingModule,\n        HttpModule,\n        HttpClientModule\n        //UiElementsModule,\n       // UserModule\n\n    ],\n    providers: [\n        HttpService,\n        AuthService,\n        AuthGuardService,\n        {\n            provide: LocationStrategy,\n            useClass: HashLocationStrategy\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInterceptorService,\n            multi: true\n        }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { reportservice } from '../../../shared/services/report.service';\n@Component({\n  selector: 'app-add-report',\n  templateUrl: './add-report.component.html',\n  styleUrls: ['./add-report.component.css']\n})\nexport class AddreportComponent implements OnInit {\n  report = {\n    title: '',\n    description: '',\n    published: false\n  };\n  submitted = false;\n\n  constructor(private reportservice:  reportservice) { }\n\n  ngOnInit() {\n  }\n\n  savereport() {\n    const data = {\n      title: this.report.title,\n      description: this.report.description\n    };\n\n    this.reportservice.create(data)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.submitted = true;\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  newreport() {\n    this.submitted = false;\n    this.report = {\n      title: '',\n      description: '',\n      published: false\n    };\n  }\n\n}\n","<div class=\"submit-form\">\n  <div *ngIf=\"!submitted\">\n    <div class=\"form-group\">\n      <label for=\"title\">Title</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"title\"\n        required\n        [(ngModel)]=\"report.title\"\n        name=\"title\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <input\n        class=\"form-control\"\n        id=\"description\"\n        required\n        [(ngModel)]=\"report.description\"\n        name=\"description\"\n      />\n    </div>\n\n    <button (click)=\"savereport()\" class=\"btn btn-success\">Submit</button>\n  </div>\n\n  <div *ngIf=\"submitted\">\n    <h4>You submitted successfully!</h4>\n    <button class=\"btn btn-success\" (click)=\"newreport()\">Add</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { reportservice } from '../../../shared/services/report.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-report-details',\n  templateUrl: './report-details.component.html',\n  styleUrls: ['./report-details.component.css']\n})\nexport class reportDetailsComponent implements OnInit {\n  currentreport = null;\n  message = '';\n\n  constructor(\n    private reportservice: reportservice,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.message = '';\n    this.getreport(this.route.snapshot.paramMap.get('id'));\n  }\n\n  getreport(id) {\n    this.reportservice.get(id)\n      .subscribe(\n        data => {\n          this.currentreport = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updatePublished(status) {\n    const data = {\n      title: this.currentreport.title,\n      description: this.currentreport.description,\n      published: status\n    };\n\n    this.reportservice.update(this.currentreport.id, data)\n      .subscribe(\n        response => {\n          this.currentreport.published = status;\n          console.log(response);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updatereport() {\n    this.reportservice.update(this.currentreport.id, this.currentreport)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = 'The report was updated successfully!';\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  deletereport() {\n    this.reportservice.delete(this.currentreport.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/report']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","<div *ngIf=\"currentreport\" class=\"edit-form\">\n  <h4>report</h4>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"title\">Title</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"title\"\n        [(ngModel)]=\"currentreport.title\"\n        name=\"title\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"description\"\n        [(ngModel)]=\"currentreport.description\"\n        name=\"description\"\n      />\n    </div>\n\n    <div class=\"form-group\">\n      <label><strong>Status:</strong></label>\n      {{ currentreport.published ? \"Published\" : \"Pending\" }}\n    </div>\n  </form>\n\n  <button\n    class=\"badge badge-primary mr-2\"\n    *ngIf=\"currentreport.published\"\n    (click)=\"updatePublished(false)\"\n  >\n    UnPublish\n  </button>\n  <button\n    *ngIf=\"!currentreport.published\"\n    class=\"badge badge-primary mr-2\"\n    (click)=\"updatePublished(true)\"\n  >\n    Publish\n  </button>\n\n  <button class=\"badge badge-danger mr-2\" (click)=\"deletereport()\">\n    Delete\n  </button>\n\n  <button type=\"submit\" class=\"badge badge-success\" (click)=\"updatereport()\">\n    Update\n  </button>\n  <p>{{ message }}</p>\n</div>\n\n<div *ngIf=\"!currentreport\">\n  <br />\n  <p>Cannot access this report...</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { reportservice } from '../../../shared/services/report.service';\n\n@Component({\n  selector: 'app-reports-list',\n  templateUrl: './report-list.component.html',\n  styleUrls: ['./report-list.component.css']\n})\nexport class reportsListComponent implements OnInit {\n\n  reports: any;\n  currentreport = null;\n  currentIndex = -1;\n  title = '';\n\n  constructor(private reportservice: reportservice) { }\n\n  ngOnInit() {\n    this.retrievereports();\n  }\n\n  retrievereports() {\n    this.reportservice.getAll()\n      .subscribe(\n        data => {\n          this.reports = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList() {\n    this.retrievereports();\n    this.currentreport = null;\n    this.currentIndex = -1;\n  }\n\n  setActivereport(report, index) {\n    this.currentreport = report;\n    this.currentIndex = index;\n  }\n\n  removeAllreports() {\n    this.reportservice.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.refreshList();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  searchTitle() {\n    this.reportservice.findByTitle(this.title)\n      .subscribe(\n        data => {\n          this.reports = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","<div class=\"list row\">\n  <div class=\"col-md-8\">\n    <div class=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search by title\"\n        [(ngModel)]=\"title\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          (click)=\"searchTitle()\"\n        >\n          Search\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <h4>reports List</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let report of reports; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActivereport(report, i)\"\n      >\n        {{ report.title }}\n      </li>\n    </ul>\n\n    <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllreports()\">\n      Remove All\n    </button>\n  </div>\n  <div class=\"col-md-6\">\n    <div *ngIf=\"currentreport\">\n      <h4>report</h4>\n      <div>\n        <label><strong>Title:</strong></label> {{ currentreport.title }}\n      </div>\n      <div>\n        <label><strong>Description:</strong></label>\n        {{ currentreport.description }}\n      </div>\n      <div>\n        <label><strong>Status:</strong></label>\n        {{ currentreport.published ? \"Published\" : \"Pending\" }}\n      </div>\n\n      <a class=\"badge badge-warning\" routerLink=\"/reports/{{ currentreport.id }}\">\n        Edit\n      </a>\n    </div>\n\n    <div *ngIf=\"!currentreport\">\n      <br />\n      <p>Please click on a report...</p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.css']\n})\nexport class PagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blank-template',\n  templateUrl: './blank-template.component.html'\n})\nexport class BlankTemplateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-left-nav-template',\n  templateUrl: './left-nav-template.component.html'\n})\nexport class LeftNavTemplateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<app-navigation></app-navigation>\n<router-outlet></router-outlet>","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {AuthService} from './auth.service';\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n    constructor(private authService: AuthService) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        return this.authService.isAuthenticated();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs'\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HttpClient, HttpHeaders, HttpErrorResponse} from \"@angular/common/http\";\nimport {environment} from '../../../environments/environment';\nimport * as _ from 'lodash';\nimport {HttpService} from '../../shared/services/http.service';\n//const transactions = require('../../../reports');\n\n@Injectable()\nexport class AuthService {\n    token: string;\n\n    constructor(private _http: HttpClient,\n                private _router: Router,\n                private _httpService: HttpService) {\n    }\n\n\n    signupUser(body: any): Observable<any> {\n        return this._httpService.post('/signup', body);\n    }\n\n    \n    \n    signinUser(username: string, password: string): Observable<any> {\n        \n        const body = {\n            'username': username,\n            'password': password\n        };\n        return this._httpService.post('/login', body)\n            .pipe(\n                tap(\n                    (data: { data: any, response: string, response_message: Array<any> }) => {\n                        if (data.response === 'success') {\n                            if (data && data.data) {\n                                localStorage.setItem('token', data.data);\n                            }\n                            return data;\n                        }\n                    }),\n                catchError(error => Observable.throw(error || 'Internal server error'))\n            );\n    }\n\n    isLoggedIn(): boolean {\n        const isLoggedIn = localStorage.getItem('token');\n        return (isLoggedIn ? true : false);\n    }\n\n    logout(): void {\n        if (this.isLoggedIn()) {\n            localStorage.removeItem('token');\n            const options = {\n                headers: new HttpHeaders()\n                    .set('Authorization', 'bearer ' + this.getToken())\n                    .set('Content-Type', 'application/json')\n            };\n            // return this._http.get(\n            //     this.serverBase + '/auth/logout',\n            //     options\n            // ).map(response => {\n            //     if (response) {\n            //         return response;\n            //     }\n            // }).catch(this._errorHandler);\n        }\n        localStorage.removeItem('token');\n        this.token = null;\n    }\n\n    getUserInfo() {\n        \n        const userToken = this.getToken();\n        if (userToken) {\n            let payload = userToken.split('.')[1];\n            payload = atob(payload);\n            payload = JSON.parse(payload);\n            return payload;\n        }\n        return null;\n    }\n\n    getRole(): string {\n        const userInfo = this.getUserInfo();\n        if (userInfo) {\n            return userInfo['role'] || '';\n        } else {\n            return null;\n        }\n    }\n\n   \n    getToken(): string {\n        return localStorage.getItem('token');\n    }\n    getRprt() {\n        \n        const userToken = this.getToken();\n        if (userToken) {\n            let payload = userToken.split('.')[1];\n            payload = atob(payload);\n            payload = JSON.parse(payload);\n            return payload;\n        }\n        return null;\n    }\n\n\n    isAuthenticated() {\n        if (localStorage.getItem('token')) {\n            return true;\n        }\n        this._router.navigate(['/user/login']);\n        return false;\n    }\n\n    _errorHandler(error: Response) {\n        console.log(error);\n        return Observable.throw(error || 'Internal server error');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"navbar navbar-dark bg-dark mt-5 fixed-bottom\">\n    <div class=\"navbar-expand m-auto navbar-text\">\n        Made with <i class=\"fa fa-heart\"></i> by <a href=\"https://www.linkedin.com/in/rhtvma/\">AcrobatGoat</a>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private _authService: AuthService,\n              private _router: Router) {\n  }\n\n  ngOnInit() {\n      this.userName();\n  }\n\n  userName(): string {\n      const userName = this._authService.getUserInfo();\n      return userName['first_name'];\n  }\n\n  logout() {\n      this._authService.logout();\n      this._router.navigate(['/user/login']);\n  }\n}","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark \">\n    <a class=\"navbar-brand\" routerLink=\"/home\">ETT--ETL Testing Tool</a>\n    <div class=\"navbar-expand mr-auto\">\n        <div class=\"navbar-nav\">\n            <a class=\"nav-item nav-link active\" routerLink=\"/pages/home\">Resource&TaskManagement</a>\n            <a class=\"nav-item nav-link\" routerLink=\"/pages/report\">Reports</a>\n            <a class=\"nav-item nav-link\" routerLink=\"/pages/about\">About</a>\n            <a class=\"nav-item nav-link\" routerLink=\"/pages/contact\">Contact</a>\n        </div>\n    </div>\n    <div class=\"navbar-expand ml-auto navbar-nav\">\n        <div class=\"navbar-nav\">\n            <a class=\"nav-item nav-link\" href=\"https://github.com/rhtvma\" target=\"_blank\">\n                <i class=\"fa fa-github\"></i>\n            </a>\n            <a class=\"nav-item nav-link\" href=\"https://twitter.com/rhtvma\" target=\"_blank\">\n                <i class=\"fa fa-twitter\"></i>\n            </a>\n        </div>\n    </div>\n    <div class=\"pull-right\">\n        <ul class=\"nav pull-right\">\n            <li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">Welcome, {{userName()}}\n                <b class=\"caret\"></b></a>\n                <ul class=\"dropdown-menu\">\n                    <li><a href=\"/help/support\"><i class=\"icon-envelope\"></i> Contact Support</a></li>\n                    <li class=\"divider\"></li>\n                    <li><a (click)=\"logout()\"><i class=\"icon-off\"></i> Logout</a></li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"sidebar hidden-sm-down\">\n    <ul class=\"nav in\" id=\"side-menu\">\n        <li class=\"sidebar-search hidden-sm hidden-md hidden-lg\">\n            <!-- input-group -->\n            <div class=\"input-group custom-search-form\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search...\"> <span class=\"input-group-btn\">\n            <button class=\"btn btn-default\" type=\"button\"> <i class=\"fa fa-search\"></i> </button>\n            </span></div>\n            <!-- /input-group -->\n        </li>\n        <li class=\"user-pro\">\n            <a href=\"#\" class=\"text-center\">\n                <div class=\"profile-img\">\n                    <img src=\"assets/images/profile.jpg\"/>\n                </div>\n                <span>Subir</span>\n                <small class=\"text-center\">Senior Developer</small>\n            </a>\n        </li>\n        <li><a [routerLink]=\"['dashboard']\" [routerLinkActive]=\"['active']\" class=\"waves-effect\"><i class=\"fa fa-home\"></i> <span\n                class=\"hide-menu\">Dashboard</span></a></li>\n        <!-- <li class=\"\"><a href=\"javascript:void(0);\" class=\"waves-effect\"><i class=\"fa fa-envelope-o\"></i> <span\n                class=\"hide-menu\"> Mailbox <span class=\"fa arrow\"></span><span\n                class=\"label label-rouded label-danger pull-right\">6</span></span></a>\n        </li> -->\n        <li>\n            <a [routerLink]=\"['ui-elements']\" [routerLinkActive]=\"['active']\">\n                <i class=\"fa fa-edit\"></i>\n                <span class=\"hide-menu\">UI Elements</span>\n            </a>\n        </li>\n        <li>\n            <a  [routerLink]=\"['forms']\" [routerLinkActive]=\"['active']\">\n                <i class=\"fa fa-edit\"></i>\n                <span class=\"hide-menu\">Form</span>\n            </a>\n        </li>\n        <li>\n            <a  [routerLink]=\"['tables']\" [routerLinkActive]=\"['active']\">\n                <i class=\"fa fa-bars\"></i>\n                <span class=\"hide-menu\">Tables</span>\n            </a>\n        </li>\n    </ul>\n</div>","import {HttpClient, HttpHeaders, HttpErrorResponse} from \"@angular/common/http\";\nimport {Injectable} from \"@angular/core\";\nimport {environment} from \"../../../environments/environment\";\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {Observable} from 'rxjs'\nimport {catchError, map, tap} from 'rxjs/operators';\n\n\n@Injectable()\nexport class HttpService {\n    private serverBase: string;\n\n    constructor(private _http: HttpClient,\n                private _spinner: NgxSpinnerService) {\n        this.serverBase = environment.serverBase;\n    }\n\n    get(url): Observable<any> {\n        this._spinner.show();\n        return this._http.get(this.serverBase + url, {})\n    }\n\n    post(url: String, data: any): Observable<any> {\n        this._spinner.show();\n      \n        const apiEndpoint = `${this.serverBase}${url}`;\n        console.log(`Reaching endpoint: ${apiEndpoint}`);\n        return this._http.post(apiEndpoint, data, {});\n    };\n\n    put(url: String, data: any): Observable<any> {\n        this._spinner.show();\n       const apiEndpoint = `${this.serverBase}${url}`;\n        console.log(`Reaching endpoint: ${apiEndpoint}`);\n\n        return this._http.put(apiEndpoint, data, {});\n    };\n\n    delete(url: String, id: any): Observable<any> {\n        this._spinner.show();\n        // let token = localStorage.getItem('token');\n        // const headers = new HttpHeaders()\n        //     .set('Authorization', 'bearer ' + token)\n        //     .set('Content-Type', 'application/json');\n       const apiEndpoint = `${this.serverBase}${url}`;\n        console.log(`Reaching endpoint: ${apiEndpoint}`);\n        let options = {\n            // headers: headers\n        };\n        return this._http.delete(apiEndpoint + \"/\" + id, options);\n    };\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:3001/api/reports';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class reportservice {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n\n  findByTitle(title) {\n    return this.http.get(`${baseUrl}?title=${title}`);\n  }\n}\n","// To make Intercepter Work We need to Import the HttpClientModule into our application in app\nimport {Injectable} from \"@angular/core\";\nimport {tap} from \"rxjs/operators\";\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor,\n    HttpResponse,\n    HttpErrorResponse\n} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/Observable\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n    constructor() {\n    }\n\n    //function which will be called for all http calls\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        //how to update the request Parameters\n        const token = localStorage.getItem('token');\n        const updatedRequest = request.clone({\n            headers: request.headers\n                .set('Authorization', 'bearer ' + token)\n                .set('Content-Type', 'application/json')\n        });\n        \n        //logging the updated Parameters to browser's console\n        console.log(\"Before making api call : \", updatedRequest);\n        return next.handle(request).pipe(\n            tap(\n                event => {\n                    //logging the http response to browser's console in case of a success\n                    if (event instanceof HttpResponse) {\n                        console.log(\"api call success :\", event);\n                    }\n                },\n                error => {\n                    //logging the http response to browser's console in case of a failuer\n                    if (event instanceof HttpResponse) {\n                        console.log(\"api call error :\", event);\n                    }\n                }\n            )\n        );\n    }\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  serverBase: \"http://localhost:3001\",\n  inSecureApi: \"/api\",\n  secureApi: \"/auth\",\n  endpoints: {\n      users: \"/getAllUsers\",\n      admin: \"/admin\",\n      pager: \"/pager\"\n  }\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}