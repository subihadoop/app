{"version":3,"sources":["./src/app/user/signup/signup-form/signup-form.component.ts","./src/app/user/signup/signup-form/signup-form.component.html","./src/app/user/signup/signup-routing.module.ts","./src/app/user/signup/signup.component.ts","./src/app/user/signup/signup.component.html","./src/app/user/signup/signup.module.ts"],"names":[],"mappings":"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","file":"signup-signup-module-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\n\n@Component({\n    selector: 'signup-form',\n    templateUrl: './signup-form.component.html',\n    styleUrls: ['./signup-form.component.css']\n})\n\nexport class SignupFormComponent implements OnInit {\n\n    signupForm: FormGroup;\n    firstname: FormControl;\n    lastname: FormControl;\n    email: FormControl;\n    password: FormControl;\n    cpassword: FormControl;\n    username: FormControl;\n    mobile: FormControl;\n\n    ngOnInit() {\n        this.createFormControls();\n        this.createForm();\n    }\n\n    createFormControls() {\n        this.firstname = new FormControl('', [\n            Validators.required\n        ]);\n        this.lastname = new FormControl('', [\n            Validators.required\n        ]);\n        this.email = new FormControl('', [\n            Validators.required,\n            Validators.pattern(\"[^ @]*@[^ @]*\")\n        ]);\n        this.password = new FormControl('', [\n            Validators.required,\n            Validators.minLength(5)\n        ]);\n        this.cpassword = new FormControl('', [\n            Validators.required,\n            Validators.minLength(5)\n        ]);\n        this.username = new FormControl('', [\n            Validators.required\n        ]);\n        this.mobile = new FormControl('');\n    }\n\n    createForm() {\n        this.signupForm = new FormGroup({\n            firstname: this.firstname,\n            lastname: this.lastname,\n            email: this.email,\n            password: this.password,\n            cpassword: this.cpassword,\n            username: this.username,\n            mobile: this.mobile\n        });\n    }\n\n    onSubmit() {\n        console.log('you submitted value: ', this.signupForm.value);\n        const formData = this.signupForm[\"controls\"];\n        formData['firstname'].markAsTouched();\n        formData['lastname'].markAsTouched();\n        formData['username'].markAsTouched();\n        formData['email'].markAsTouched();\n        formData['password'].markAsTouched();\n        formData['cpassword'].markAsTouched();\n    }\n}\n","<form novalidate\n      [formGroup]=\"signupForm\">\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\"{\n        'has-danger': firstname.invalid && (firstname.dirty || firstname.touched),\n        'has-success': firstname.valid && (firstname.dirty || firstname.touched)}\">\n            <input type=\"text\"\n                   id=\"firstname\"\n                   class=\"fadeIn\"\n                   placeholder=\"firstname\"\n                   formControlName=\"firstname\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"firstname.errors && (firstname.dirty || firstname.touched)\">\n                <p *ngIf=\"firstname.errors.required\">firstname is required</p>\n                <p *ngIf=\"firstname.errors.pattern\">The username must contain at least the @ character</p>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\"{\n        'has-danger': lastname.invalid && (lastname.dirty || lastname.touched),\n        'has-success': lastname.valid && (lastname.dirty || lastname.touched)}\">\n            <input type=\"text\"\n                   id=\"lastname\"\n                   class=\"fadeIn\"\n                   placeholder=\"lastname\"\n                   formControlName=\"lastname\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"lastname.errors && (lastname.dirty || lastname.touched)\">\n                <p *ngIf=\"lastname.errors.required\">lastname is required</p>\n                <p *ngIf=\"lastname.errors.pattern\">The lastname must contain at least the @ character</p>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\"{\n        'has-danger': username.invalid && (username.dirty || username.touched),\n        'has-success': username.valid && (username.dirty || username.touched)}\">\n            <input type=\"text\"\n                   id=\"username\"\n                   class=\"fadeIn\"\n                   placeholder=\"username\"\n                   formControlName=\"username\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"username.errors && (username.dirty || username.touched)\">\n                <p *ngIf=\"username.errors.required\">Username is required</p>\n                <p *ngIf=\"username.errors.pattern\">The username address must contain at least the @ character</p>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\"{\n        'has-danger': email.invalid && (email.dirty || email.touched),\n        'has-success': email.valid && (email.dirty || email.touched)}\">\n            <input type=\"text\"\n                   id=\"login\"\n                   class=\"fadeIn\"\n                   placeholder=\"email\"\n                   formControlName=\"email\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"email.errors && (email.dirty || email.touched)\">\n                <p *ngIf=\"email.errors.required\">Email is required</p>\n                <p *ngIf=\"email.errors.pattern\">The email address must contain at least the @ character</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\" {\n        'has-danger': password.invalid && (password.dirty || password.touched),\n        'has-success': password.valid && (password.dirty || password.touched) }\">\n            <input type=\"password\"\n                   class=\"fadeIn\"\n                   name=\"password\"\n                   id=\"password\"\n                   placeholder=\"password\"\n                   formControlName=\"password\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"password.errors && (password.dirty || password.touched)\">\n                <p *ngIf=\"password.errors.required\">Password is required</p>\n                <p *ngIf=\"password.errors.minlength\">Password must be 5 characters long, we need another\n                    {{password.errors.minlength.requiredLength - password.errors.minlength.actualLength}}\n                    characters </p>\n            </div>\n        </div>\n        <div class=\"form-group col-md-6\"\n             [ngClass]=\" {\n        'has-danger': cpassword.invalid && (cpassword.dirty || cpassword.touched),\n        'has-success': cpassword.valid && (cpassword.dirty || cpassword.touched) }\">\n            <input type=\"password\"\n                   class=\"fadeIn\"\n                   name=\"cpassword\"\n                   id=\"cpassword\"\n                   placeholder=\"Confirm password\"\n                   formControlName=\"cpassword\"\n                   required>\n            <div class=\"form-control-feedback\"\n                 *ngIf=\"cpassword.errors && (cpassword.dirty || cpassword.touched)\">\n                <p *ngIf=\"cpassword.errors.required\">Confirm Password is required</p>\n                <p *ngIf=\"cpassword.errors.minlength\">Confirm Password must be 5 characters long, we need another\n                    {{cpassword.errors.minlength.requiredLength - cpassword.errors.minlength.actualLength}}\n                    characters </p>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <input type=\"number\"\n                   class=\"fadeIn\"\n                   name=\"mobile\"\n                   id=\"mobile\"\n                   placeholder=\"mobile - (Optional)\"\n                   formControlName=\"mobile\"\n                   >\n        </div>\n        <div class=\"form-group col-md-6\">\n            <select id=\"sex\"\n                    class=\"fadeIn\">\n                <option selected>Choose you sex</option>\n                <option>male</option>\n                <option>female</option>\n            </select>\n        </div>\n    </div>\n</form>\n\n\n\n\n\n\n\n\n\n\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {SignupComponent} from './signup.component';\n\nconst routes: Routes = [\n    {path: '', component: SignupComponent}\n];\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SignupRoutingModule {\n}\n","import {Component, OnInit, ViewChild, AfterViewInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {AuthService} from '../../shared/auth/auth.service';\nimport {ToastrMessageService} from '../../shared/services/toastr-message.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SignupFormComponent} from './signup-form/signup-form.component';\nimport {Observable} from 'rxjs'\nimport {catchError, map, tap} from 'rxjs/operators';\n//import { Routes, RouterModule } from '@angular/router'; \n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.css'],\n    providers: [ToastrMessageService]\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n\n    @ViewChild(SignupFormComponent) signupFormData;\n    model: any;\n\n    constructor(private _authService: AuthService,\n                private _router: Router,\n                private _toastrMessageService: ToastrMessageService) {\n    }\n\n    ngAfterViewInit() {\n        this.model = this.signupFormData.signupForm;\n    }\n\n    onSubmit() {\n        this.signupFormData.onSubmit();\n    }\n\n    ngOnInit() {\n\n    }\n\n    signup(): void {\n        if (!this.model.valid) {\n            this.onSubmit();\n            console.log(\"Form is invalid!\");\n            return;\n        }\n        let data = this.model[\"controls\"];\n       \n        const body = {\n            firstname: data.firstname.value,\n            lastname: data.lastname.value,\n            username: data.username.value,\n            email: data.email.value,\n            password: data.password.value,\n            mobile: data.mobile.value || null\n        };\n        this._authService.signupUser(body)\n            .subscribe(\n                (data: { data: any, response: string, response_message: Array<any> }) => {\n                    if (data.response === 'success') {\n                        this._toastrMessageService.typeSuccess(data.response_message);\n                        this._router.navigate(['/user/login']);\n                    }\n                },\n                (error) => {\n                    this._toastrMessageService.typeError(error.error.response_message || error.status_text);\n                    this._router.navigate(['/user/signup']);\n                });\n\n    }\n}\n","<section class=\"testimonial py-5 fadeInDown\" id=\"testimonial\">\n    <div class=\"container \" id=\"signupContent\">\n        <div class=\"row \">\n            <div class=\"col-md-4 py-5 bg-primary text-white text-center \">\n                <div class=\"card-body\">\n                    <img src=\"http://www.ansonika.com/mavia/img/registration_bg.svg\" style=\"width:30%\">\n                    <h2 class=\"py-3\">Registration</h2>\n                    <p>Please fill all the mandatory fields </p>\n                </div>\n                <a class=\"underlineHover\" routerLink=\"/user/login\">Already have an account? Sign In</a>\n            </div>\n            <div class=\"col-md-8 py-5 border\">\n                <h4 class=\"pb-4\">Please fill with your details</h4>\n                <signup-form></signup-form>\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <div class=\"form-check\">\n                            <input class=\"fadeIn\" type=\"checkbox\" value=\"\" id=\"invalidCheck2\"\n                                   required>\n                            <label class=\"form-check-label\" for=\"invalidCheck2\">\n                                <small>By clicking Submit, you agree to our Terms & Conditions, Visitor\n                                    Agreement and Privacy Policy.\n                                </small>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <input type=\"submit\" class=\"button\" value=\"Signup\" (click)=\"signup()\">\n                </div>\n                 <div class=\"form-row\">\n                    <button class=\"button\" routerLink=\"/login\">Login</button>\n                </div>\n                </div>\n        </div>\n    </div>\n</section>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {SignupRoutingModule} from './signup-routing.module';\nimport {SignupComponent} from './signup.component';\nimport {SignupFormComponent} from './signup-form/signup-form.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SignupRoutingModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [SignupComponent, SignupFormComponent]\n})\nexport class SignupModule {\n}\n"],"sourceRoot":"webpack:///"}